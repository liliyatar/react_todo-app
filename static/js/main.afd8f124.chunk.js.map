{"version":3,"sources":["TodoItem.js","TodoList.js","TodoHeader.js","TodosFilter.js","TodoFooter.js","App.js","index.js"],"names":["TodoItem","_ref","todo","handleCheck","handleDelete","react_default","a","createElement","className","isCompleted","key","id","type","checked","onChange","title","onClick","TodoList","filteredTodos","map","todoItem","src_TodoItem","TodoHeader","state","handleInputChange","value","target","_this","setState","replace","handleSubmit","event","preventDefault","props","addTodo","this","onSubmit","placeholder","React","Component","TodosFilter","todos","setFilter","currentFilter","removeCompletedTodos","Fragment","Object","values","FILTER_TYPES","filter","href","concat","length","style","display","TodoFooter","onSetFilter","amountOfActiveTodos","src_TodosFilter","all","active","completed","App","todoList","filterIdentifier","handleAddTodo","prevState","toConsumableArray","Date","now","deleteTodo","filterTodos","toggleTodoCompleted","objectSpread2","toggleAllTodosCompleted","some","_this$state","src_TodoHeader","every","htmlFor","src_TodoList","src_TodoFooter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.afd8f124.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TodoItem = ({ todo, handleCheck, handleDelete }) => (\n  <li className={todo.isCompleted ? 'completed' : ''} key={todo.id}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        checked={todo.isCompleted}\n        onChange={() => handleCheck(todo.id)}\n      />\n      <label className=\"todo\">{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => handleDelete(todo.id)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes\n    .shape({\n      isCompleted: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ filteredTodos, handleDelete, handleCheck }) => (\n  <ul className=\"todo-list\">\n    {filteredTodos.map(todoItem => (\n      <TodoItem\n        todo={todoItem}\n        key={todoItem.id}\n        handleCheck={handleCheck}\n        handleDelete={handleDelete}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoHeader extends React.Component {\n  state = {\n    title: '',\n  };\n\n  handleInputChange = ({ target: { value } }) => {\n    this.setState({\n      title: value.replace(/^\\s+/, ''),\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n\n    if (title) {\n      this.props.addTodo(title);\n\n      this.setState({\n        title: '',\n      });\n    }\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"main\">\n        <h1>todos</h1>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nTodoHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTER_TYPES } from './App';\n\nconst TodosFilter = ({\n  todos,\n  setFilter,\n  currentFilter,\n  removeCompletedTodos,\n}) => (\n  <>\n    <ul className=\"filters\">\n      {Object.values(FILTER_TYPES).map(filter => (\n        <li key={filter}>\n          <a\n            href={`#/${filter}`}\n            onClick={() => setFilter(filter)}\n            className={currentFilter === filter ? 'selected' : ''}\n          >\n            {filter}\n          </a>\n        </li>\n      ))}\n    </ul>\n    {todos.filter(todo => todo.isCompleted).length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={removeCompletedTodos}\n      >\n        Clear completed\n      </button>\n    )}\n  </>\n);\n\nTodosFilter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      isCompleted: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  setFilter: PropTypes.func.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n  removeCompletedTodos: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilters from './TodosFilter';\n\nconst TodoFooter = ({\n  todos,\n  onSetFilter,\n  currentFilter,\n  removeCompletedTodos,\n  amountOfActiveTodos,\n}) => (\n  <section className=\"footer\">\n    <span className=\"todo-count\">\n      {amountOfActiveTodos}\n      {' '}\n      {amountOfActiveTodos === 1\n        ? 'item left'\n        : 'items left'\n      }\n    </span>\n    <TodosFilters\n      todos={todos}\n      setFilter={onSetFilter}\n      currentFilter={currentFilter}\n      removeCompletedTodos={removeCompletedTodos}\n    />\n  </section>\n);\n\nTodoFooter.propTypes = {\n  currentFilter: PropTypes.string.isRequired,\n  onSetFilter: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      isCompleted: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  amountOfActiveTodos: PropTypes.number.isRequired,\n  removeCompletedTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport TodoHeader from './TodoHeader';\nimport TodoFooter from './TodoFooter';\n\nexport const FILTER_TYPES = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n\nclass App extends React.Component {\n  state = {\n    todoList: [],\n    filterIdentifier: FILTER_TYPES.all,\n  };\n\n  handleAddTodo = (title) => {\n    this.setState(prevState => ({\n      todoList: [\n        ...prevState.todoList,\n        {\n          id: +Date.now(),\n          title,\n          isCompleted: false,\n        },\n      ],\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList\n        .filter(todoItem => todoItem.id !== id),\n    }));\n  };\n\n  setFilter = (currentFilter) => {\n    this.setState({\n      filterIdentifier: currentFilter,\n    });\n  };\n\n  filterTodos = () => {\n    switch (this.state.filterIdentifier) {\n      case FILTER_TYPES.active:\n        return this.state.todoList.filter(todo => !todo.isCompleted);\n      case FILTER_TYPES.completed:\n        return this.state.todoList.filter(todo => todo.isCompleted);\n      default:\n        return this.state.todoList.filter(todo => todo.id);\n    }\n  };\n\n  toggleTodoCompleted = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            isCompleted: !todo.isCompleted,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  toggleAllTodosCompleted = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList\n        .map(todo => ({\n          ...todo,\n          isCompleted: prevState.todoList\n            .some(todoItem => !todoItem.isCompleted),\n        })),\n    }));\n  };\n\n  removeCompletedTodos = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList\n        .filter(todoItem => !todoItem.isCompleted),\n    }));\n  };\n\n  render() {\n    const {\n      todoList,\n      filterIdentifier,\n    } = this.state;\n    const amountOfActiveTodos = todoList\n      .filter(todo => !todo.isCompleted).length;\n\n    return (\n      <section className=\"todoapp\">\n        <TodoHeader addTodo={this.handleAddTodo} />\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={todoList.every(todo => todo.isCompleted)}\n            onClick={this.toggleAllTodosCompleted}\n          />\n          {todoList.length > 0 && (\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          )}\n          <TodoList\n            filteredTodos={this.filterTodos()}\n            handleCheck={this.toggleTodoCompleted}\n            handleDelete={this.deleteTodo}\n          />\n        </section>\n\n        {(todoList.length > 0) && (\n          <TodoFooter\n            todos={todoList}\n            onSetFilter={this.setFilter}\n            currentFilter={filterIdentifier}\n            amountOfActiveTodos={amountOfActiveTodos}\n            removeCompletedTodos={this.removeCompletedTodos}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}